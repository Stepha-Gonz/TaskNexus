const mobileMenuBtn=document.querySelector("#mobile-menu"),cerrarMenuBtn=document.querySelector("#cerrar-menu"),sidebar=document.querySelector(".sidebar");mobileMenuBtn&&mobileMenuBtn.addEventListener("click",(function(){sidebar.classList.add("mostrar")})),cerrarMenuBtn&&cerrarMenuBtn.addEventListener("click",(function(){sidebar.classList.add("ocultar"),setTimeout((()=>{sidebar.classList.remove("mostrar"),sidebar.classList.remove("ocultar")}),1e3)}));const anchoPantalla=document.body.clientWidth;window.addEventListener("resize",(function(){document.body.clientWidth>=768&&sidebar.classList.remove("mostrar")})),function(){!async function(){try{const t=`api/tareas?id=${i()}`,a=await fetch(t),o=await a.json();e=o.tareas,n()}catch(e){console.log(e)}}();let e=[],t=[];document.querySelector("#agregar-tarea").addEventListener("click",(function(){o(),console.log("okey")}));function a(a){const o=a.target.value;t=""!==o?e.filter((e=>e.estado===o)):[],n()}function n(){!function(){const e=document.querySelector("#listado-tareas");for(;e.firstChild;)e.removeChild(e.firstChild)}(),function(){const t=e.filter((e=>"0"===e.estado)),a=document.querySelector("#pendientes");a.nextElementSibling.addEventListener("click",(function(e){0===t.length?a.disabled=0===t.length:a.disabled=!1}))}(),function(){const t=e.filter((e=>"1"===e.estado)),a=document.querySelector("#completadas");a.nextElementSibling.addEventListener("click",(function(e){0===t.length?a.disabled=0===t.length:a.disabled=!1}))}();const a=t.length?t:e;if(0===a.length){const e=document.querySelector("#listado-tareas"),t=document.createElement("LI");return t.textContent="No Hay Tareas",t.classList.add("no-tareas"),void e.appendChild(t)}const s={0:"Pendiente",1:"Completa"};a.forEach((t=>{const a=document.createElement("LI");a.dataset.tareaId=t.id,a.classList.add("tarea");const c=document.createElement("P");c.textContent=t.nombre;const d=document.createElement("I");d.classList.add("ri-pencil-line"),c.appendChild(d),c.ondblclick=function(){o(editar=!0,{...t})};const l=document.createElement("DIV");l.classList.add("opciones");const u=document.createElement("BUTTON");u.classList.add("estado-tarea"),u.classList.add(`${s[t.estado].toLowerCase()}`),u.textContent=s[t.estado],u.dataset.estadoTarea=t.estado,u.ondblclick=function(){!function(e){const t="1"===e.estado?"0":"1";e.estado=t,r(e)}({...t})};const m=document.createElement("BUTTON");m.classList.add("eliminar-tarea"),m.dataset.idtarea=t.id,m.textContent="Eliminar",m.onclick=function(){!function(t){Swal.fire({title:"Estas seguro de eliminar la Tarea?",text:"No se podrá revertir esta acción!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Sí, Eliminarla!"}).then((a=>{a.isConfirmed&&(Swal.fire({title:"Tarea Eliminada!",icon:"success"}),async function(t){const{estado:a,id:o,nombre:r}=t,s=new FormData;s.append("id",o),s.append("nombre",r),s.append("estado",a),s.append("proyectoId",i());try{const a=`${location.origin}/api/tarea/eliminar`,o=await fetch(a,{method:"POST",body:s});(await o.json()).resultado&&(e=e.filter((e=>e.id!==t.id)),n())}catch(e){console.log(e)}}(t))}))}({...t})},l.appendChild(u),l.appendChild(m),a.appendChild(c),a.appendChild(l);document.querySelector("#listado-tareas").appendChild(a)}))}function o(t=!1,a={}){const o=document.createElement("DIV");o.classList.add("modal"),o.innerHTML=`\n      \n      <form class="formulario nueva-tarea">\n    \n        <legend> ${t?"Editar Tarea":"Agrega una nueva Tarea"} </legend>\n          <div class="campo" >\n              <label>Nueva Tarea</label>\n              <input type="text" name="tarea" id="tarea" placeholder="${a.nombre?"Edita el nombre de la tarea ":"Agrega una tarea al proyecto actual"}" value="${a.nombre?a.nombre:""}">\n          </div>\n          <div class="opciones">\n              \n              <button type="submit" class="botondeg submit-nueva-tarea azul" id="submit-nueva-tarea">\n                <span class="transition verde submit-nueva-tarea"></span>\n                <span class="gradient submit-nueva-tarea"></span>\n                <span class="label submit-nueva-tarea"><i class="ri-add-circle-fill submit-nueva-tarea"> </i>${t?"Guardar Cambios":"Agregar Tarea"}</span>\n              </button>\n              \n              <button type="button" class="botondeg cerrar-modal  naranja">\n                <span class="transition rojo cerrar-modal"></span>\n                <span class="gradient cerrar-modal"></span>\n                <span class="label cerrar-modal"><i class="ri-close-line cerrar-modal"></i> Cancelar</span>\n              </button>\n              \n          </div>\n      </form>\n      \n      `,setTimeout((()=>{document.querySelector(".formulario").classList.add("animar")}),0),o.addEventListener("click",(function(s){if(s.preventDefault(),s.target.classList.contains("cerrar-modal")){document.querySelector(".formulario").classList.add("cerrar"),setTimeout((()=>{o.remove()}),500)}if(s.target.classList.contains("submit-nueva-tarea")){const o=document.querySelector("#tarea").value.trim();if(""===o)return void function(e,t,a){const n=document.querySelector(".alerta");n&&n.remove();const o=document.createElement("DIV");o.classList.add("alerta",t),o.textContent=e,a.parentElement.insertBefore(o,a.nextElementSibling),setTimeout((()=>{o.remove()}),4e3)}("El nombre de la tarea es obligatorio","error",document.querySelector(".formulario legend"));t?(a.nombre=o,r(a)):async function(t){const a=new FormData;a.append("nombre",t),a.append("proyectoId",i());try{const o=`${location.origin}/api/tarea`,r=await fetch(o,{method:"POST",body:a}),i=await r.json();if(swal.fire(i.mensaje,"","success"),"exito"===i.tipo){const a=document.querySelector(".modal");setTimeout((()=>{a.remove()}),0);const o={id:String(i.id),nombre:t,estado:"0",proyectoId:i.proyectoId};e=[...e,o],n()}}catch(e){console.log(e)}}(o)}})),document.querySelector(".dashboard").appendChild(o)}async function r(t){const{estado:a,id:o,nombre:r,proyectoId:s}=t,c=new FormData;c.append("id",o),c.append("nombre",r),c.append("estado",a),c.append("proyectoId",i());try{const t=`${location.origin}/api/tarea/actualizar`,i=await fetch(t,{method:"POST",body:c}),s=await i.json();if("exito"===s.respuesta.tipo){swal.fire(s.respuesta.mensaje,"","success");const t=document.querySelector(".modal");t&&t.remove(),e=e.map((e=>(e.id===o&&(e.estado=a,e.nombre=r),e))),n()}}catch(e){console.log(e)}}function i(){const e=new URLSearchParams(window.location.search);return Object.fromEntries(e.entries()).id}document.querySelectorAll('#filtros input[type="radio"]').forEach((e=>{e.addEventListener("input",a)}))}();